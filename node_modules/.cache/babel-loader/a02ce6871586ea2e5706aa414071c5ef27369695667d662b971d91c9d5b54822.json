{"ast":null,"code":"var _jsxFileName = \"/Users/hobo/Desktop/react-cards-pokemon/src/PlayingCard.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport backOfCard from \"./back.png\";\nimport \"./PlayingCard.css\";\n\n/* Renders a single playing card. */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlayingCard({\n  front,\n  back = backOfCard\n}) {\n  _s();\n  const [isFacingUp, setIsFacingUp] = useState(true);\n  const flipCard = () => {\n    setIsFacingUp(isUp => !isUp);\n  };\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: isFacingUp ? front : back,\n    alt: \"playing card\",\n    onClick: flipCard,\n    className: \"PlayingCard Card\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(PlayingCard, \"MAa1uxaU8Uj1WEqjPNN6CqCOgcw=\");\n_c = PlayingCard;\nexport default PlayingCard;\nconst useFlip = () => {\n  _s2();\n  const [isFacingUp, setIsFacingUp] = useState(true);\n  return [isFacingUp, flipCard];\n};\n_s2(useFlip, \"MAa1uxaU8Uj1WEqjPNN6CqCOgcw=\");\nvar _c;\n$RefreshReg$(_c, \"PlayingCard\");","map":{"version":3,"names":["React","useState","backOfCard","jsxDEV","_jsxDEV","PlayingCard","front","back","_s","isFacingUp","setIsFacingUp","flipCard","isUp","src","alt","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","useFlip","_s2","$RefreshReg$"],"sources":["/Users/hobo/Desktop/react-cards-pokemon/src/PlayingCard.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport backOfCard from \"./back.png\";\nimport \"./PlayingCard.css\";\n\n/* Renders a single playing card. */\nfunction PlayingCard({ front, back = backOfCard }) {\n  const [isFacingUp, setIsFacingUp] = useState(true);\n  const flipCard = () => {\n    setIsFacingUp((isUp) => !isUp);\n  };\n  return (\n    <img\n      src={isFacingUp ? front : back}\n      alt=\"playing card\"\n      onClick={flipCard}\n      className=\"PlayingCard Card\"\n    />\n  );\n}\n\nexport default PlayingCard;\n\nconst useFlip = () => {\n  const [isFacingUp, setIsFacingUp] = useState(true);\n  return [isFacingUp, flipCard];\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAO,mBAAmB;;AAE1B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,WAAWA,CAAC;EAAEC,KAAK;EAAEC,IAAI,GAAGL;AAAW,CAAC,EAAE;EAAAM,EAAA;EACjD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAMU,QAAQ,GAAGA,CAAA,KAAM;IACrBD,aAAa,CAAEE,IAAI,IAAK,CAACA,IAAI,CAAC;EAChC,CAAC;EACD,oBACER,OAAA;IACES,GAAG,EAAEJ,UAAU,GAAGH,KAAK,GAAGC,IAAK;IAC/BO,GAAG,EAAC,cAAc;IAClBC,OAAO,EAAEJ,QAAS;IAClBK,SAAS,EAAC;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEN;AAACZ,EAAA,CAbQH,WAAW;AAAAgB,EAAA,GAAXhB,WAAW;AAepB,eAAeA,WAAW;AAE1B,MAAMiB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACpB,MAAM,CAACd,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAClD,OAAO,CAACQ,UAAU,EAAEE,QAAQ,CAAC;AAC/B,CAAC;AAACY,GAAA,CAHID,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}